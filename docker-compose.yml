services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - mongo
      - kafka
    env_file:
      - ./backend/.env.production
    networks:
      - app_network

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    env_file:
    - ./frontend/.env.production
    networks:
      - app_network

  consumer:
    build: ./backend
    depends_on:
      - kafka
      - mongo
    command: ["python", "-m", "app.kafka.consumer"]
    env_file:
      - ./backend/.env.production
    networks:
      - app_network

  producer:
    build: ./backend
    depends_on:
      - kafka
      - mongo
    command: ["python", "app/kafka/random_transfers_producer.py"]
    env_file:
      - ./backend/.env.production
    networks:
      - app_network

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app_network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data:
